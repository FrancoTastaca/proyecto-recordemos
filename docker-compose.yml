# =====================================================
# DOCKER COMPOSE - RECUERDAME DEVELOPMENT
# =====================================================
# Ambiente completo de desarrollo para Recuerdame

version: '3.8'

services:
  # =====================================================
  # BACKEND API
  # =====================================================
  backend:
    build:
      context: ./backend
      target: development
      dockerfile: Dockerfile
    container_name: recuerdame-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=database
      - DB_PORT=3306
      - DB_NAME=recuerdame_db
      - DB_USER=recuerdame_user
      - DB_PASSWORD=recuerdame_password
      - JWT_SECRET=super_secret_jwt_key_for_development_only
      - RUTA_FRONT=http://localhost:8081
    volumes:
      - ./backend/src:/app/src
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
      - backend_node_modules:/app/node_modules
    depends_on:
      database:
        condition: service_healthy
    networks:
      - recuerdame-network
    command: npm run dev

  # =====================================================
  # BASE DE DATOS MYSQL
  # =====================================================
  database:
    image: mysql:8.0
    container_name: recuerdame-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: recuerdame_db
      MYSQL_USER: recuerdame_user
      MYSQL_PASSWORD: recuerdame_password
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - recuerdame-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s

  # =====================================================
  # PHPMYADMIN (OPCIONAL - PARA DESARROLLO)
  # =====================================================
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: recuerdame-phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_USER: recuerdame_user
      PMA_PASSWORD: recuerdame_password
      MYSQL_ROOT_PASSWORD: root_password
    depends_on:
      - database
    networks:
      - recuerdame-network
    profiles:
      - tools

  # =====================================================
  # REDIS (OPCIONAL - PARA CACHE)
  # =====================================================
  redis:
    image: redis:7-alpine
    container_name: recuerdame-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - recuerdame-network
    profiles:
      - cache
    command: redis-server --appendonly yes

  # =====================================================
  # NGINX (OPCIONAL - PARA PRODUCCIÓN)
  # =====================================================
  nginx:
    image: nginx:alpine
    container_name: recuerdame-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - recuerdame-network
    profiles:
      - production

# =====================================================
# VOLÚMENES PERSISTENTES
# =====================================================
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  backend_node_modules:
    driver: local

# =====================================================
# REDES
# =====================================================
networks:
  recuerdame-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# =====================================================
# COMANDOS ÚTILES
# =====================================================
# Ejecutar stack completo:
#   docker-compose up -d
#
# Solo backend + database:
#   docker-compose up -d backend database
#
# Con herramientas de desarrollo (phpMyAdmin):
#   docker-compose --profile tools up -d
#
# Con cache Redis:
#   docker-compose --profile cache up -d
#
# Para producción con Nginx:
#   docker-compose --profile production up -d
#
# Ver logs:
#   docker-compose logs -f backend
#
# Ejecutar comandos en backend:
#   docker-compose exec backend npm test
#   docker-compose exec backend npm run lint
#
# Backup de base de datos:
#   docker-compose exec database mysqldump -u recuerdame_user -p recuerdame_db > backup.sql
#
# Restaurar base de datos:
#   docker-compose exec -T database mysql -u recuerdame_user -p recuerdame_db < backup.sql